<%- include('header') %>
<%- include('nav') %>
<style>
    #temperatureGraph {
        width: 100% ;}
</style>

<!-- i didn't know it was necessary including this for chart.js :/ -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script> 

<div id="app" class="container py-5">
    <h1 class="mb-4 text-center">üå§Ô∏è Weather </h1>
    <div class="mb-4">
        <label class="form-label">Select or enter a city:</label> 
    <div class="row g-2">
    <div class="col-md-4">
        <select v-model="selectedCity" class="form-select"> <!-- Dropdown -->
            <option disabled value="">Select a city</option>
            <option v-for="city in cities" :value="city">{{ city }}</option>
        </select>
    </div>

    <!-- search input -->
    <div class="col-md-6">
        <input 
            v-model="cidadeDigitada" 
            class="form-control" 
            placeholder="Enter a city">
    </div>

    <!-- search button calling searchWeather method -->
    <div class="col-md-2">
        <button @click="searchWeather" class="btn btn-primary w-100">Search</button>
    </div>
    <div v-if="weather" class="row mb-4 g-3">
  
  <!-- Tempreature Card -->
    <div class="col-md-8">
        <div class="card shadow-sm h-100">
            <div class="card-body">
                <div class="d-flex align-items-center mb-3">
                    <div>
                        <h5 class="card-title mb-0" style="width: 150px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                            {{ currentCity }}
                        </h5>
                    </div>
                    <div class="d-flex">
                        <!-- API give a icon address in JSON file for current weather illustration-->
                        <img  :src="'https:' + weather.condition.icon" 
                              :alt="weather.condition.text"
                              width="64"
                              height="64"
                              class="ms-3">
                        <span class="fs-2 fw-semibold ms-2">
                            {{ weather.temp_c }}¬∞C
                        </span>
                    </div>
                </div>
                <p class="card-text">
                    <strong>Condition:</strong> {{ weather.condition.text }} <br>
                    <strong>Humidity:</strong> {{ weather.humidity }}% <br>
                    <strong>Wind:</strong> {{ weather.wind_kph }} km/h <br>
                </p>
            </div>
        </div>
    </div>

  <!-- Alert CArd -->
    <div class="col-md-4">
        <div class="card shadow-sm h-100" :class="alert ? 'border-danger bg-light' : 'border-success'">
            <div class="card-body">
                <h5 class="card-title" :class="alert ? 'text-danger' : 'text-success'">
                    ‚ö†Ô∏è Weather Alert
                </h5>
                <!-- For Aesthetic, i leave the card visible and when API send a alert, the card will change colors -->
                <p class="card-text fw-bold">
                    {{ alert ? alert : 'Nothing for now.' }}
                </p>
            </div>
        </div>
    </div>

  <!-- Graph Card -->
    <div v-if="temperature.length > 0" class="card shadow-sm">
        <div class="card-body">
            <h5 class="card-title">Temperature Variation (today)</h5>
            <div style="position: relative; height: 400px;">
                <canvas id="temperatureGraph"></canvas>
            </div>
        </div>
    </div>
</div>

<script>
    const { createApp, watch } = Vue;

    createApp({
        data() {
            return {
                selectedCity: '',
                cidadeDigitada: '',
                currentCity: '',
                cities: ['Aracaju', 'Belem', 'Belo Horizonte','Boa Vista', 'Brasilia', 'Campo Grande', 'Cuiaba', 
                          'Curitiba', 'Florianopolis', 'Fortaleza', 'Goiania', 'Joao Pessoa', 'Macapa', 'Maceio', 
                          'Manaus', 'Porto Alegre', 'Porto Velho', 'Recife', 'Rio Branco', 'Rio de Janeiro', 
                          'Salvador', 'Sao Luis', 'Sao Paulo', 'Teresina', 'Vitoria'],
                weather: null,
                alert: null,
                tempreature: [],
                hours: [],
                graph: null
            };
      },
      methods: {
          async searchWeather() {
              const city = this.cidadeDigitada.trim() || this.selectedCity;

          if (!city) {
              alert('Select or enter the city!');
              return;
          }

          try {
              const response = await fetch(`/weather/${city}`);
              const data = await response.json();

              if (data.error) {
                  alert(`Erro: ${data.error}`);
                  return;
              }
              this.currentCity = city;
              this.weather = data.current;
              this.alert = data.alert || null;
              this.temperature = data.hourlyTemperature.map(item => item.temp_c);
              this.hours = data.hourlyTemperature.map(item => item.hour);

              this.renderGraph();
          } catch (error) {
              console.error('Erro ao buscar dados do clima:', error);
          }
        },

        renderGraph(){ // render graph using charts.js
            this.$nextTick(() => {
              const canvas = document.getElementById('temperatureGraph');
              if (!canvas) {
                  console.error('Canvas not found!');
                  return;
              }

              const ctx = canvas.getContext('2d');

              if (this.graph) {
                  this.graph.destroy();
                  this.graph = null;
              }

              this.graph = new Chart(ctx, {
                  type: 'line',
                  data: {
                      labels: this.hours,
                      datasets: [{
                          label: 'Temperature (¬∞C)',
                          data: this.temperature,
                          borderColor: 'rgba(54, 162, 235, 1)',
                          backgroundColor: 'rgba(54, 162, 235, 0.2)',
                          tension: 0.3,
                          fill: true,
                          pointRadius: 4,
                      }]
                  },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: false
                        }
                    }
                }
              });
            });
          }
      },
      watch: { // clean de search fields to just one be in use at time
          cidadeDigitada(newVal) {
              if (newVal) {
                  this.selectedCity = '';
              }
          },
          selectedCity(newVal) {
              if (newVal) {
                  this.cidadeDigitada = '';
              }
          }
      }
    }).mount('#app');
</script>

<%- include('footer') %>

